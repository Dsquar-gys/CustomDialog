Index: CustomDialog/Views/BodyView.axaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><UserControl xmlns=\"https://github.com/avaloniaui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             xmlns:vm=\"using:CustomDialog.ViewModels\"\n             xmlns:i=\"clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity\"\n             xmlns:iac=\"clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions\"\n             xmlns:entities=\"clr-namespace:CustomDialog.ViewModels.Entities\"\n             mc:Ignorable=\"d\"\n             d:DesignWidth=\"800\"\n             d:DesignHeight=\"450\"\n             x:DataType=\"vm:BodyViewModel\"\n             x:Class=\"CustomDialog.Views.BodyView\">\n\n    <Design.DataContext>\n        <vm:BodyViewModel/>\n    </Design.DataContext>\n    \n    <Border Background=\"Gainsboro\"\n            Margin=\"5\"\n            CornerRadius=\"10\">\n        <ScrollViewer VerticalScrollBarVisibility=\"Auto\"\n                      HorizontalScrollBarVisibility=\"Auto\"\n                      Name=\"Scroll\">\n            <Grid>\n            \n                <Grid.RowDefinitions>\n                    <RowDefinition Height=\"Auto\" />\n                    <RowDefinition Height=\"*\" />\n                </Grid.RowDefinitions>\n            \n                <TextBox Grid.Row=\"0\" \n                         Text=\"{Binding Name}\" />\n            \n                <ListBox Grid.Row=\"1\"\n                         ItemsSource=\"{Binding DirectoryContent}\"\n                         SelectedItem=\"{Binding SelectedFileEntity}\"\n                         Classes.Plated=\"{Binding Plated}\"\n                         Classes.Tabled=\"{Binding !Plated}\">\n                    \n                    <i:Interaction.Behaviors>\n                        <iac:EventTriggerBehavior EventName=\"DoubleTapped\">\n                            <iac:InvokeCommandAction Command=\"{Binding ChangeSelectedCommand}\" \n                                                     CommandParameter=\"{Binding SelectedFileEntity}\"/>\n                        </iac:EventTriggerBehavior>\n                    </i:Interaction.Behaviors>\n                    \n                    <ListBox.Styles>\n                        <Style Selector=\"ListBoxItem\">\n                            <Setter Property=\"Width\" Value=\"150\" />\n                            <Setter Property=\"HorizontalAlignment\" Value=\"Left\"/>\n                            <Setter Property=\"Margin\" Value=\"5\"/>\n                            <Setter Property=\"Background\" Value=\"Transparent\"/>\n                        </Style>\n                        <Style Selector=\"ListBox.Plated\">\n                            <Setter Property=\"ItemsPanel\">\n                                <ItemsPanelTemplate>\n                                    <WrapPanel Orientation=\"Horizontal\"\n                                               MaxWidth=\"{Binding $parent[TransitioningContentControl].Bounds.Width}\"/>\n                                </ItemsPanelTemplate>\n                            </Setter>\n                            <Setter Property=\"ItemTemplate\">\n                                <DataTemplate>\n                                    <StackPanel>\n                                        <Image x:DataType=\"entities:FileEntityViewModel\"\n                                               Source=\"{Binding Converter={StaticResource ImagableConverter}}\"\n                                               Width=\"75\"/>\n                                        <TextBlock x:DataType=\"entities:FileEntityViewModel\"\n                                                   Text=\"{Binding Title}\"\n                                                   HorizontalAlignment=\"Center\"/>\n                                    </StackPanel>\n                                </DataTemplate>\n                            </Setter>\n                        </Style>\n                        <Style Selector=\"ListBox.Tabled\">\n                            <Setter Property=\"ItemsPanel\">\n                                <ItemsPanelTemplate>\n                                    <WrapPanel Orientation=\"Vertical\"\n                                               MaxHeight=\"{Binding $parent[TransitioningContentControl].Bounds.Height}\"/>\n                                </ItemsPanelTemplate>\n                            </Setter>\n                            <Setter Property=\"ItemTemplate\">\n                                <DataTemplate>\n                                    <StackPanel Orientation=\"Horizontal\">\n                                        <Image x:DataType=\"entities:FileEntityViewModel\"\n                                               Source=\"{Binding Converter={StaticResource ImagableConverter}}\"\n                                               Width=\"50\"/>\n                                        <TextBlock x:DataType=\"entities:FileEntityViewModel\"\n                                                   Text=\"{Binding Title}\"\n                                                   HorizontalAlignment=\"Center\"\n                                                   VerticalAlignment=\"Center\"\n                                                   Margin=\"3,0\"/>\n                                    </StackPanel>\n                                </DataTemplate>\n                            </Setter>\n                        </Style>\n                    </ListBox.Styles>\n                </ListBox>\n            </Grid>\n        </ScrollViewer>\n    </Border>\n    \n</UserControl>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/Views/BodyView.axaml b/CustomDialog/Views/BodyView.axaml
--- a/CustomDialog/Views/BodyView.axaml	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/CustomDialog/Views/BodyView.axaml	(date 1707230149224)
@@ -19,85 +19,18 @@
     <Border Background="Gainsboro"
             Margin="5"
             CornerRadius="10">
-        <ScrollViewer VerticalScrollBarVisibility="Auto"
-                      HorizontalScrollBarVisibility="Auto"
-                      Name="Scroll">
-            <Grid>
+        <ContentControl Tag="{Binding CurrentTemplateStyle}"
+                        Content="{Binding .}"
+                        ContentTemplate="{Binding CurrentTemplate}">
             
-                <Grid.RowDefinitions>
-                    <RowDefinition Height="Auto" />
-                    <RowDefinition Height="*" />
-                </Grid.RowDefinitions>
-            
-                <TextBox Grid.Row="0" 
-                         Text="{Binding Name}" />
-            
-                <ListBox Grid.Row="1"
-                         ItemsSource="{Binding DirectoryContent}"
-                         SelectedItem="{Binding SelectedFileEntity}"
-                         Classes.Plated="{Binding Plated}"
-                         Classes.Tabled="{Binding !Plated}">
-                    
-                    <i:Interaction.Behaviors>
-                        <iac:EventTriggerBehavior EventName="DoubleTapped">
-                            <iac:InvokeCommandAction Command="{Binding ChangeSelectedCommand}" 
-                                                     CommandParameter="{Binding SelectedFileEntity}"/>
-                        </iac:EventTriggerBehavior>
-                    </i:Interaction.Behaviors>
-                    
-                    <ListBox.Styles>
-                        <Style Selector="ListBoxItem">
-                            <Setter Property="Width" Value="150" />
-                            <Setter Property="HorizontalAlignment" Value="Left"/>
-                            <Setter Property="Margin" Value="5"/>
-                            <Setter Property="Background" Value="Transparent"/>
-                        </Style>
-                        <Style Selector="ListBox.Plated">
-                            <Setter Property="ItemsPanel">
-                                <ItemsPanelTemplate>
-                                    <WrapPanel Orientation="Horizontal"
-                                               MaxWidth="{Binding $parent[TransitioningContentControl].Bounds.Width}"/>
-                                </ItemsPanelTemplate>
-                            </Setter>
-                            <Setter Property="ItemTemplate">
-                                <DataTemplate>
-                                    <StackPanel>
-                                        <Image x:DataType="entities:FileEntityViewModel"
-                                               Source="{Binding Converter={StaticResource ImagableConverter}}"
-                                               Width="75"/>
-                                        <TextBlock x:DataType="entities:FileEntityViewModel"
-                                                   Text="{Binding Title}"
-                                                   HorizontalAlignment="Center"/>
-                                    </StackPanel>
-                                </DataTemplate>
-                            </Setter>
-                        </Style>
-                        <Style Selector="ListBox.Tabled">
-                            <Setter Property="ItemsPanel">
-                                <ItemsPanelTemplate>
-                                    <WrapPanel Orientation="Vertical"
-                                               MaxHeight="{Binding $parent[TransitioningContentControl].Bounds.Height}"/>
-                                </ItemsPanelTemplate>
-                            </Setter>
-                            <Setter Property="ItemTemplate">
-                                <DataTemplate>
-                                    <StackPanel Orientation="Horizontal">
-                                        <Image x:DataType="entities:FileEntityViewModel"
-                                               Source="{Binding Converter={StaticResource ImagableConverter}}"
-                                               Width="50"/>
-                                        <TextBlock x:DataType="entities:FileEntityViewModel"
-                                                   Text="{Binding Title}"
-                                                   HorizontalAlignment="Center"
-                                                   VerticalAlignment="Center"
-                                                   Margin="3,0"/>
-                                    </StackPanel>
-                                </DataTemplate>
-                            </Setter>
-                        </Style>
-                    </ListBox.Styles>
-                </ListBox>
-            </Grid>
-        </ScrollViewer>
+            <i:Interaction.Behaviors>
+                <iac:EventTriggerBehavior EventName="DoubleTapped">
+                    <iac:InvokeCommandAction Command="{Binding ChangeSelectedCommand}" 
+                                             CommandParameter="{Binding SelectedFileEntity}"/>
+                </iac:EventTriggerBehavior>
+            </i:Interaction.Behaviors>
+            
+        </ContentControl>
     </Border>
     
 </UserControl>
Index: CustomDialog/ViewModels/BodyViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections.ObjectModel;\nusing System.IO;\nusing System.Linq;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing Avalonia.Controls;\nusing CustomDialog.Models;\nusing CustomDialog.ViewModels.Commands;\nusing CustomDialog.ViewModels.Entities;\nusing CustomDialog.ViewModels.History;\nusing ReactiveUI;\n\nnamespace CustomDialog.ViewModels;\n\npublic class BodyViewModel : ViewModelBase\n{\n    #region Private Fields\n\n    private string _filePath;\n    private string _name;\n    private FileEntityViewModel _selectedFileEntity;\n    private readonly IDirectoryHistory _history;\n    private CancellationTokenSource _tokenSource = new();\n    private CancellationToken _token;\n    private ObservableCollection<FileEntityViewModel> _directoryContent = new();\n\n    #endregion\n\n    private bool _plated = true;\n\n    public bool Plated\n    {\n        get => _plated;\n        set => this.RaiseAndSetIfChanged(ref _plated, value);\n    }\n    \n    #region Properties\n\n    public string Name\n    {\n        get => _name;\n        set => this.RaiseAndSetIfChanged(ref _name, value);\n    }\n    public string FilePath\n    {\n        get => _filePath;\n        set => this.RaiseAndSetIfChanged(ref _filePath, value);\n    }\n    public ObservableCollection<FileEntityViewModel> DirectoryContent\n    {\n        get => _directoryContent;\n        set => this.RaiseAndSetIfChanged(ref _directoryContent, value);\n    }\n    public FileEntityViewModel SelectedFileEntity\n    {\n        get => _selectedFileEntity;\n        set => this.RaiseAndSetIfChanged(ref _selectedFileEntity, value);\n    }\n\n    #endregion\n    \n    #region Commands\n\n    public DelegateCommand ChangeSelectedCommand { get; }\n    \n    public DelegateCommand OpenCommand { get; }\n\n    public DelegateCommand MoveBackCommand { get; }\n\n    public DelegateCommand MoveForwardCommand { get; }\n\n    #endregion\n\n    public BodyViewModel()\n    {\n        _history = DirectoryHistory.DefaultPage;\n\n        ChangeSelectedCommand = new DelegateCommand(ChangeSelected);\n        OpenCommand = new DelegateCommand(Open);\n        MoveBackCommand = new DelegateCommand(OnMoveBack, OnCanMoveBack);\n        MoveForwardCommand = new DelegateCommand(OnMoveForward, OnCanMoveForward);\n        \n        Name = _history.Current.DirectoryPathName;\n        FilePath = _history.Current.DirectoryPath;\n        \n        _history.HistoryChanged += History_HistoryChanged;\n        \n        _token = _tokenSource.Token;\n    }\n    \n    #region Commands Methods\n\n    private void ChangeSelected(object parameter)\n    {\n        if (parameter is ILoadable directory)\n        {\n            FilePath = directory.FullPath;\n            _history.Add(directory.FullPath, directory.Title);\n        }\n    }\n    \n    private void Open(object parameter)\n    {\n        if (parameter is ILoadable loadable)\n        {\n            FilePath = loadable.FullPath;\n            Name = loadable.Title;\n\n            OpenDirectoryAsync();\n        }\n\n        if (parameter is FileViewModel file)\n        {\n            Console.WriteLine(\"BodyViewModel --> Open --> File opening...\");\n        }\n\n        if (parameter is TextBox textBox)\n        {\n            FilePath = textBox.Text;\n            Name = new string(textBox.Text.Skip(1 + textBox.Text.LastIndexOf('/')).ToArray());\n            \n            OpenDirectoryAsync();\n        }\n    }\n\n    private bool OnCanMoveForward(object obj) => _history.CanMoveForward;\n\n    private void OnMoveForward(object obj)\n    {\n        _history.MoveForward();\n\n        var current = _history.Current;\n\n        FilePath = current.DirectoryPath;\n        Name = current.DirectoryPathName;\n    }\n\n    private bool OnCanMoveBack(object obj) => _history.CanMoveBack;\n\n    private void OnMoveBack(object obj)\n    {\n        _history.MoveBack();\n\n        var current = _history.Current;\n\n        FilePath = current.DirectoryPath;\n        Name = current.DirectoryPathName;\n    }\n\n    #endregion\n    \n    #region Private Methods\n\n    private void History_HistoryChanged(object sender, EventArgs e)\n    {\n        MoveBackCommand?.RaiseCanExecuteChanged();\n        MoveForwardCommand?.RaiseCanExecuteChanged();\n    }\n    \n    private async Task OpenDirectoryAsync()\n    {\n        Console.WriteLine(\"Start thread: {0}\", Environment.CurrentManagedThreadId);\n        \n        await _tokenSource.CancelAsync();\n        DirectoryContent.Clear();\n        await Task.Delay(10);\n\n        _tokenSource = new();\n        _token = _tokenSource.Token;\n        \n        var directoryInfo = new DirectoryInfo(FilePath);\n        // Task 2\n        await Task.Run(() =>\n        {\n            Console.WriteLine(\"Awaited task in thread: {0}\", Environment.CurrentManagedThreadId);\n            ObservableCollection<FileEntityViewModel> pulling = new();\n            \n            foreach (var directory in directoryInfo.EnumerateDirectories())\n            {\n                if (_token.IsCancellationRequested)\n                {\n                    Console.WriteLine(\"Task cancelled\");\n                    return pulling;\n                }\n                pulling.Add(new DirectoryViewModel(directory));\n            }\n\n            foreach (var file in directoryInfo.EnumerateFiles())\n            {\n                if (_token.IsCancellationRequested)\n                {\n                    Console.WriteLine(\"Task cancelled\");\n                    return pulling;\n                }\n                pulling.Add(new FileViewModel(file));\n            }\n\n            return pulling;\n        }, _token).ContinueWith(x =>\n        {\n            DirectoryContent = x.Result;\n        }, TaskScheduler.FromCurrentSynchronizationContext());\n    }\n    \n    #endregion\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/ViewModels/BodyViewModel.cs b/CustomDialog/ViewModels/BodyViewModel.cs
--- a/CustomDialog/ViewModels/BodyViewModel.cs	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/CustomDialog/ViewModels/BodyViewModel.cs	(date 1707232155622)
@@ -5,10 +5,12 @@
 using System.Threading;
 using System.Threading.Tasks;
 using Avalonia.Controls;
+using Avalonia.Controls.Templates;
 using CustomDialog.Models;
 using CustomDialog.ViewModels.Commands;
 using CustomDialog.ViewModels.Entities;
 using CustomDialog.ViewModels.History;
+using CustomDialog.Views.Templates;
 using ReactiveUI;
 
 namespace CustomDialog.ViewModels;
@@ -24,19 +26,38 @@
     private CancellationTokenSource _tokenSource = new();
     private CancellationToken _token;
     private ObservableCollection<FileEntityViewModel> _directoryContent = new();
+    private TemplateStyle _currentTemplateStyle;
+    private IDataTemplate _currentTemplate;
+
+    private SpecificViewModel svmd = new SpecificViewModel("directory", "111", null);
+    private SpecificViewModel svmf = new SpecificViewModel("file", "222", null);
 
     #endregion
-
-    private bool _plated = true;
-
-    public bool Plated
-    {
-        get => _plated;
-        set => this.RaiseAndSetIfChanged(ref _plated, value);
-    }
     
     #region Properties
 
+    public IDataTemplate CurrentTemplate
+    {
+        get => _currentTemplate;
+        set => this.RaiseAndSetIfChanged(ref _currentTemplate, value);
+    }
+    
+    public TemplateStyle CurrentTemplateStyle
+    {
+        get => _currentTemplateStyle;
+        set
+        {
+            SpecificViewModel.CommonStyle = value switch
+            {
+                TemplateStyle.WrapPanel => new WrapPanelTemplate(),
+                TemplateStyle.DataGrid => new DataGridTemplate(),
+                _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown Template Style")
+            };
+            CurrentTemplate = SpecificViewModel.CommonStyle;
+            this.RaiseAndSetIfChanged(ref _currentTemplateStyle, value);
+        }
+    }
+    
     public string Name
     {
         get => _name;
@@ -83,6 +104,9 @@
         
         Name = _history.Current.DirectoryPathName;
         FilePath = _history.Current.DirectoryPath;
+
+        CurrentTemplateStyle = TemplateStyle.WrapPanel;
+        CurrentTemplate = new WrapPanelTemplate();
         
         _history.HistoryChanged += History_HistoryChanged;
         
@@ -175,6 +199,7 @@
         {
             Console.WriteLine("Awaited task in thread: {0}", Environment.CurrentManagedThreadId);
             ObservableCollection<FileEntityViewModel> pulling = new();
+            FileEntityViewModel? _entity;
             
             foreach (var directory in directoryInfo.EnumerateDirectories())
             {
@@ -183,7 +208,10 @@
                     Console.WriteLine("Task cancelled");
                     return pulling;
                 }
-                pulling.Add(new DirectoryViewModel(directory));
+                
+                if (svmd.TryToCreateFileEntry(directory, out _entity))
+                    pulling.Add(_entity);
+                //pulling.Add(new DirectoryViewModel(directory));
             }
 
             foreach (var file in directoryInfo.EnumerateFiles())
@@ -193,7 +221,10 @@
                     Console.WriteLine("Task cancelled");
                     return pulling;
                 }
-                pulling.Add(new FileViewModel(file));
+                
+                if (svmf.TryToCreateFileEntry(file, out _entity))
+                    pulling.Add(_entity);
+                //pulling.Add(new FileViewModel(file));
             }
 
             return pulling;
Index: CustomDialog/ViewModels/Entities/FileEntityViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using CustomDialog.Models;\n\nnamespace CustomDialog.ViewModels.Entities;\n\npublic abstract class FileEntityViewModel : ViewModelBase, IImagable\n{\n    public string Title { get; set; }\n    public string FullPath { get; set; }\n    public string IconName { get; }\n\n    protected FileEntityViewModel(string path, string? title = null, string? iconName = null)\n    {\n        Title = title ?? path;\n        FullPath = path;\n        IconName = iconName;\n\n        string type = \"\";\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/ViewModels/Entities/FileEntityViewModel.cs b/CustomDialog/ViewModels/Entities/FileEntityViewModel.cs
--- a/CustomDialog/ViewModels/Entities/FileEntityViewModel.cs	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/CustomDialog/ViewModels/Entities/FileEntityViewModel.cs	(date 1707229187433)
@@ -7,8 +7,9 @@
     public string Title { get; set; }
     public string FullPath { get; set; }
     public string IconName { get; }
+    public SpecificViewModel SVM { get; }
 
-    protected FileEntityViewModel(string path, string? title = null, string? iconName = null)
+    protected FileEntityViewModel(SpecificViewModel svm, string path, string? title = null, string? iconName = null)
     {
         Title = title ?? path;
         FullPath = path;
Index: CustomDialog/ViewModels/Entities/FileViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.IO;\n\nnamespace CustomDialog.ViewModels.Entities;\n\npublic sealed class FileViewModel : FileEntityViewModel\n{\n    public FileViewModel(string filePath, string fileName) : base(filePath, fileName, \"file\") {}\n    public FileViewModel(FileInfo file) : base(file.FullName, file.Name, \"file\") {}\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/ViewModels/Entities/FileViewModel.cs b/CustomDialog/ViewModels/Entities/FileViewModel.cs
--- a/CustomDialog/ViewModels/Entities/FileViewModel.cs	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/CustomDialog/ViewModels/Entities/FileViewModel.cs	(date 1707229248248)
@@ -4,6 +4,6 @@
 
 public sealed class FileViewModel : FileEntityViewModel
 {
-    public FileViewModel(string filePath, string fileName) : base(filePath, fileName, "file") {}
-    public FileViewModel(FileInfo file) : base(file.FullName, file.Name, "file") {}
+    public FileViewModel(SpecificViewModel svm, string filePath, string fileName) : base(svm, filePath, fileName, "file") {}
+    public FileViewModel(SpecificViewModel svm, FileInfo file) : base(svm, file.FullName, file.Name, "file") {}
 }
\ No newline at end of file
Index: CustomDialog/Models/Interfaces/ISpecificViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/Models/Interfaces/ISpecificViewModel.cs b/CustomDialog/Models/Interfaces/ISpecificViewModel.cs
new file mode 100644
--- /dev/null	(date 1707233212965)
+++ b/CustomDialog/Models/Interfaces/ISpecificViewModel.cs	(date 1707233212965)
@@ -0,0 +1,14 @@
+using System.Collections.ObjectModel;
+using System.Windows.Input;
+using Avalonia.Controls;
+using Avalonia.Controls.Templates;
+
+namespace CustomDialog.Models.Interfaces;
+
+public interface ISpecificViewModel : IImagable
+{
+    IDataTemplate? DisplayStyle { get; }
+    new string IconName { get; }
+    ICommand Command { get; }
+    TemplateStyle StyleName { get; }
+}
\ No newline at end of file
Index: CustomDialog/ViewModels/SpecificViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/ViewModels/SpecificViewModel.cs b/CustomDialog/ViewModels/SpecificViewModel.cs
new file mode 100644
--- /dev/null	(date 1707233158198)
+++ b/CustomDialog/ViewModels/SpecificViewModel.cs	(date 1707233158198)
@@ -0,0 +1,47 @@
+using System;
+using System.Collections.ObjectModel;
+using System.IO;
+using System.Linq;
+using System.Runtime.InteropServices.JavaScript;
+using System.Windows.Input;
+using Avalonia.Controls.Templates;
+using Avalonia.Markup.Xaml.Templates;
+using CustomDialog.Models;
+using CustomDialog.Models.Interfaces;
+using CustomDialog.ViewModels.Entities;
+
+namespace CustomDialog.ViewModels;
+
+public class SpecificViewModel : ISpecificViewModel
+{
+    public static IDataTemplate? CommonStyle { get; set; }
+
+    public IDataTemplate? DisplayStyle => CommonStyle;
+
+    public string IconName { get; }
+    public TemplateStyle StyleName { get; }
+    public ICommand? Command { get; }
+
+    public SpecificViewModel(string iconName, TemplateStyle style, ICommand command)
+    {
+        IconName = iconName;
+        StyleName = style;
+        Command = command;
+    }
+
+    public bool TryToCreateFileEntry(FileSystemInfo? file, out FileEntityViewModel vm)
+    {
+        vm = null;
+        
+        if (DisplayStyle == null)
+            return false;
+        
+        if (file is FileInfo fileInfo)
+            vm = new FileViewModel(this, fileInfo);
+
+        if (file is DirectoryInfo directoryInfo)
+            vm = new DirectoryViewModel(this, directoryInfo);
+        
+        return true;
+    }
+}
\ No newline at end of file
Index: CustomDialog/App.axaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Application xmlns=\"https://github.com/avaloniaui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             x:Class=\"CustomDialog.App\"\n             xmlns:local=\"using:CustomDialog\"\n             xmlns:converters=\"clr-namespace:CustomDialog.Converters\"\n             RequestedThemeVariant=\"Default\">\n             <!-- \"Default\" ThemeVariant follows system theme variant. \"Dark\" or \"Light\" are other available options. -->\n\n             <Application.Resources>\n                 <converters:ImagableConverter x:Key=\"ImagableConverter\" />\n             </Application.Resources>\n             <Application.DataTemplates>\n        <local:ViewLocator/>\n    </Application.DataTemplates>\n  \n    <Application.Styles>\n        <FluentTheme />\n        <StyleInclude Source=\"avares://Semi.Avalonia/Themes/Index.axaml\" />\n        <StyleInclude Source=\"Templated Controls/HeaderButton.axaml\" />\n    </Application.Styles>\n</Application>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/App.axaml b/CustomDialog/App.axaml
--- a/CustomDialog/App.axaml	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/CustomDialog/App.axaml	(date 1707231999595)
@@ -16,6 +16,7 @@
     <Application.Styles>
         <FluentTheme />
         <StyleInclude Source="avares://Semi.Avalonia/Themes/Index.axaml" />
+        <StyleInclude Source="avares://Avalonia.Controls.DataGrid/Themes/Fluent.xaml"/>
         <StyleInclude Source="Templated Controls/HeaderButton.axaml" />
     </Application.Styles>
 </Application>
\ No newline at end of file
Index: CustomDialog/Views/Templates/WrapPanelTemplate.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/Views/Templates/WrapPanelTemplate.cs b/CustomDialog/Views/Templates/WrapPanelTemplate.cs
new file mode 100644
--- /dev/null	(date 1707230966824)
+++ b/CustomDialog/Views/Templates/WrapPanelTemplate.cs	(date 1707230966824)
@@ -0,0 +1,73 @@
+using Avalonia;
+using Avalonia.Controls;
+using Avalonia.Controls.Primitives;
+using Avalonia.Controls.Templates;
+using Avalonia.Data;
+using Avalonia.Layout;
+using Avalonia.Media;
+using Avalonia.Styling;
+using CustomDialog.Converters;
+using CustomDialog.ViewModels;
+using CustomDialog.ViewModels.Entities;
+
+namespace CustomDialog.Views.Templates;
+
+public class WrapPanelTemplate : IDataTemplate
+{
+    public Control? Build(object? param)
+    {
+        BodyViewModel? vm;
+        var wpanel = new ScrollViewer
+        {
+            VerticalScrollBarVisibility = ScrollBarVisibility.Auto,
+            HorizontalScrollBarVisibility = ScrollBarVisibility.Auto,
+            Content = new ListBox
+            {
+                [!ItemsControl.ItemsSourceProperty] = new Binding(nameof(vm.DirectoryContent)),
+                [!SelectingItemsControl.SelectedItemProperty] = new Binding(nameof(vm.SelectedFileEntity)),
+                ItemTemplate = new FuncDataTemplate<FileEntityViewModel>((value, _) =>
+                    new StackPanel
+                    {
+                        Children =
+                        {
+                            new Image
+                            {
+                                [!Image.SourceProperty] = new Binding
+                                {
+                                    Path = nameof(value.SVM),
+                                    Converter = new ImagableConverter()
+                                },
+                                Width = 75,
+                            },
+                            new TextBlock
+                            {
+                                [!TextBlock.TextProperty] = new Binding("Title"),
+                                HorizontalAlignment = HorizontalAlignment.Center,
+                            },
+                        },
+                    }),
+                ItemsPanel = new FuncTemplate<Panel?>(() => new WrapPanel
+                {
+                    [!Layoutable.MaxWidthProperty] = new Binding("$parent[4].Bounds.Width")
+                }),
+                Styles =
+                {
+                    new Style(selector => selector.OfType<ListBoxItem>())
+                    {
+                        Setters =
+                        {
+                            new Setter(Layoutable.WidthProperty, 150d),
+                            new Setter(Layoutable.HorizontalAlignmentProperty, HorizontalAlignment.Left),
+                            new Setter(Layoutable.MarginProperty, new Thickness(5d)),
+                            new Setter(TemplatedControl.BackgroundProperty, Brushes.Transparent)
+                        }
+                    }
+                }
+            }
+        };
+
+        return wpanel;
+    }
+
+    public bool Match(object? data) => data is BodyViewModel;
+}
\ No newline at end of file
Index: CustomDialog/Views/Templates/DataGridTemplate.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/Views/Templates/DataGridTemplate.cs b/CustomDialog/Views/Templates/DataGridTemplate.cs
new file mode 100644
--- /dev/null	(date 1707232225373)
+++ b/CustomDialog/Views/Templates/DataGridTemplate.cs	(date 1707232225373)
@@ -0,0 +1,62 @@
+using Avalonia.Controls;
+using Avalonia.Controls.Primitives;
+using Avalonia.Controls.Templates;
+using Avalonia.Data;
+using Avalonia.Layout;
+using CustomDialog.ViewModels;
+
+namespace CustomDialog.Views.Templates;
+
+public class DataGridTemplate : IDataTemplate
+{
+    public Control? Build(object? param)
+    {
+        var vm = param as BodyViewModel;
+        var grid = new DataGrid
+        {
+            HeadersVisibility = DataGridHeadersVisibility.All,
+            SelectionMode = DataGridSelectionMode.Single,
+            VerticalScrollBarVisibility = ScrollBarVisibility.Auto,
+            [!Layoutable.MaxWidthProperty] = new Binding("$parent.Bounds.Width"),
+            [!DataGrid.ItemsSourceProperty] = new Binding(nameof(vm.DirectoryContent)),
+            [!DataGrid.SelectedItemProperty] = new Binding(nameof(vm.SelectedFileEntity)),
+            Columns =
+            {
+                new DataGridTextColumn
+                {
+                    Header = "Name",
+                    Width = new DataGridLength(2d, DataGridLengthUnitType.Star),
+                    Binding = new Binding("Title")
+                },
+                new DataGridTextColumn
+                {
+                    Header = "Type",
+                    Width = new DataGridLength(2d, DataGridLengthUnitType.Star),
+                    Binding = new Binding("SVM.IconName")
+                }
+                /*new DataGridTextColumn
+                {
+                    Header = "Created",
+                    Width = new DataGridLength(2d, DataGridLengthUnitType.Star),
+                    Binding = new Binding("Svm.FileInfo.CreationTime")
+                },
+                new DataGridTextColumn
+                {
+                    Header = "Modified",
+                    Width = new DataGridLength(2d, DataGridLengthUnitType.Star),
+                    Binding = new Binding("Svm.FileInfo.LastAccessTime")
+                },
+                new DataGridTextColumn
+                {
+                    Header = "Type",
+                    Width = new DataGridLength(2d, DataGridLengthUnitType.Star),
+                    Binding = new Binding("Svm.Size")
+                }*/
+            }
+        };
+
+        return grid;
+    }
+
+    public bool Match(object? data) => data is BodyViewModel;
+}
\ No newline at end of file
Index: CustomDialog/Models/TemplateStyle.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/Models/TemplateStyle.cs b/CustomDialog/Models/TemplateStyle.cs
new file mode 100644
--- /dev/null	(date 1707229695800)
+++ b/CustomDialog/Models/TemplateStyle.cs	(date 1707229695800)
@@ -0,0 +1,7 @@
+namespace CustomDialog.Models;
+
+public enum TemplateStyle
+{
+    WrapPanel,
+    DataGrid
+}
\ No newline at end of file
Index: .idea/.idea.CustomDialog/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoGeneratedRunConfigurationManager\">\n    <projectFile>CustomDialog/CustomDialog.csproj</projectFile>\n  </component>\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"c8cf6566-7aa5-4e8f-ae1d-39a823fbbf19\" name=\"Changes\" comment=\"Working header's radio buttons for body style change\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/.idea.CustomDialog/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.idea.CustomDialog/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/bin/Debug/net8.0/CustomDialog.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/bin/Debug/net8.0/CustomDialog.dll\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/bin/Debug/net8.0/CustomDialog.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/bin/Debug/net8.0/CustomDialog.pdb\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.dll\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.pdb\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.ref.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.ref.dll\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/resources\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/resources\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfo.cs\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfo.cs\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfoInputs.cache\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfoInputs.cache\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.dll\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.pdb\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.pdb\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.sourcelink.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.sourcelink.json\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/ref/CustomDialog.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/ref/CustomDialog.dll\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/refint/CustomDialog.dll\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/refint/CustomDialog.dll\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"HighlightingSettingsPerFile\">\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/67d798838f534f8da38ced1ba32d39251b0a00/92/3d272f3b/KnownColor.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/7146bb373e41476a8a582ddb942308ece400/6f/d7bcc2ce/ICommand.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/8ab410d6c5f04e9ab2271c7ab482daafbb800/3e/1cc67393/!AvaloniaResources.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/92bd86a637a3450aa3b133edd8991900c2d000/2a/590d015b/PortableThreadPool.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/92bd86a637a3450aa3b133edd8991900c2d000/b6/c1554974/Environment.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/92bd86a637a3450aa3b133edd8991900c2d000/b9/3b2918a4/ThreadPoolWorkQueue.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/92bd86a637a3450aa3b133edd8991900c2d000/c5/d96d6700/Task.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/decompiler/92bd86a637a3450aa3b133edd8991900c2d000/c9/019cd4f6/ExecutionContext.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/75232d8646724f1485d6289eb8585a1a1c4105499aaad329e39e513a0befa2b/TreeViewItem.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/86e7f7d5cebacb8f8e37f52cb9a1f6a4b8933239631e3d969a4bc881ae92f9/Brushes.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/b9bec4144ad6dd2ff8a7b876e54057e6449dbe2d16f7a98b8e6576601be7fcab/ListBoxItem.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"mock:///home/dmitrichenkoda@kvant-open.spb.ru/RiderProjects/CustomDialog/CustomDialog/Views/BodyView.axaml\" root0=\"SKIP_HIGHLIGHTING\" />\n    <setting file=\"file://$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/.NETCoreApp,Version=v8.0.AssemblyAttributes.cs\" root0=\"SKIP_HIGHLIGHTING\" />\n  </component>\n  <component name=\"MetaFilesCheckinStateConfiguration\" checkMetaFiles=\"true\" />\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 6\n}</component>\n  <component name=\"ProjectId\" id=\"2b2QEJ9Ml42HJXUMiIxJBVkzc40\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \".NET Project.CustomDialog.executor\": \"Run\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"git-widget-placeholder\": \"master\",\n    \"last_opened_file_path\": \"/home/dmitrichenkoda@kvant-open.spb.ru/RiderProjects/CustomDialog\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  },\n  \"keyToStringList\": {\n    \"rider.external.source.directories\": [\n      \"/home/dmitrichenkoda@kvant-open.spb.ru/.config/JetBrains/Rider2023.3/resharper-host/DecompilerCache\",\n      \"/home/dmitrichenkoda@kvant-open.spb.ru/.config/JetBrains/Rider2023.3/resharper-host/SourcesCache\",\n      \"/home/dmitrichenkoda@kvant-open.spb.ru/.local/share/Symbols/src\"\n    ]\n  }\n}]]></component>\n  <component name=\"RunManager\">\n    <configuration name=\"CustomDialog\" type=\"DotNetProject\" factoryName=\".NET Project\">\n      <option name=\"EXE_PATH\" value=\"\" />\n      <option name=\"PROGRAM_PARAMETERS\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"PASS_PARENT_ENVS\" value=\"1\" />\n      <option name=\"USE_EXTERNAL_CONSOLE\" value=\"0\" />\n      <option name=\"USE_MONO\" value=\"0\" />\n      <option name=\"RUNTIME_ARGUMENTS\" value=\"\" />\n      <option name=\"PROJECT_PATH\" value=\"$PROJECT_DIR$/CustomDialog/CustomDialog.csproj\" />\n      <option name=\"PROJECT_EXE_PATH_TRACKING\" value=\"1\" />\n      <option name=\"PROJECT_ARGUMENTS_TRACKING\" value=\"1\" />\n      <option name=\"PROJECT_WORKING_DIRECTORY_TRACKING\" value=\"1\" />\n      <option name=\"PROJECT_KIND\" value=\"DotNetCore\" />\n      <option name=\"PROJECT_TFM\" value=\"\" />\n      <method v=\"2\">\n        <option name=\"Build\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"c8cf6566-7aa5-4e8f-ae1d-39a823fbbf19\" name=\"Changes\" comment=\"\" />\n      <created>1705410580710</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1705410580710</updated>\n      <workItem from=\"1705410583192\" duration=\"6960000\" />\n      <workItem from=\"1705481012594\" duration=\"22115000\" />\n      <workItem from=\"1705655292488\" duration=\"15028000\" />\n      <workItem from=\"1705671609246\" duration=\"395000\" />\n      <workItem from=\"1705913447816\" duration=\"21129000\" />\n      <workItem from=\"1706003429032\" duration=\"15501000\" />\n      <workItem from=\"1706019107043\" duration=\"1456000\" />\n      <workItem from=\"1706088555108\" duration=\"4750000\" />\n      <workItem from=\"1706093521595\" duration=\"13520000\" />\n      <workItem from=\"1706177951902\" duration=\"14174000\" />\n      <workItem from=\"1706269184326\" duration=\"13135000\" />\n      <workItem from=\"1706528264570\" duration=\"10753000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Initial commit + Side bar tree update\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705502911112</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705502911112</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Initial commit + Side bar tree update\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705502944813</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705502944813</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Started coding the directory body display asynchronously\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705671934408</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705671934408</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Async display + header base layout\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705922992375</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705922992375</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Async display + header base layout\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705923008054</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705923008054</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Header radio buttons for display style of main content\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705926769038</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705926769038</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Some cleanup\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1705927713010</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1705927713010</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Asynchronous collection pulling with task cancellation possibility\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1706018486671</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1706018486671</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Working header buttons &quot;Back&quot; and &quot;Forward&quot;\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1706106580438</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1706106580438</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Thread safe collection pull + ILoadable entities and side bar nodes\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1706181711065</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1706181711065</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Main Body plate-type imaging\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1706193155705</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1706193155705</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Usable header's text box for input\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1706280084999</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1706280085000</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Icon converter for imagable objects\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1706285433373</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1706285433373</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Icon converter for imagable objects\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1706285484631</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1706285484631</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Working header's radio buttons for body style change\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1706538526815</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1706538526815</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"16\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"UnityCheckinConfiguration\" checkUnsavedScenes=\"true\" />\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"CLEAR_INITIAL_COMMIT_MESSAGE\" value=\"true\" />\n    <MESSAGE value=\"Initial commit + Side bar tree update\" />\n    <MESSAGE value=\"Started coding the directory body display asynchronously\" />\n    <MESSAGE value=\"Async display + header base layout\" />\n    <MESSAGE value=\"Header radio buttons for display style of main content\" />\n    <MESSAGE value=\"Some cleanup\" />\n    <MESSAGE value=\"Asynchronous collection pulling with task cancellation possibility\" />\n    <MESSAGE value=\"Working header buttons &quot;Back&quot; and &quot;Forward&quot;\" />\n    <MESSAGE value=\"Thread safe collection pull + ILoadable entities and side bar nodes\" />\n    <MESSAGE value=\"Main Body plate-type imaging\" />\n    <MESSAGE value=\"Usable header's text box for input\" />\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/master'&#10;&#10;# Conflicts:&#10;#&#9;.idea/.idea.CustomDialog/.idea/workspace.xml\" />\n    <MESSAGE value=\"Icon converter for imagable objects\" />\n    <MESSAGE value=\"Working header's radio buttons for body style change\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Working header's radio buttons for body style change\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.idea.CustomDialog/.idea/workspace.xml b/.idea/.idea.CustomDialog/.idea/workspace.xml
--- a/.idea/.idea.CustomDialog/.idea/workspace.xml	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/.idea/.idea.CustomDialog/.idea/workspace.xml	(date 1707232188786)
@@ -8,15 +8,30 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="c8cf6566-7aa5-4e8f-ae1d-39a823fbbf19" name="Changes" comment="Working header's radio buttons for body style change">
+      <change afterPath="$PROJECT_DIR$/CustomDialog/Models/Interfaces/ISpecificViewModel.cs" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/CustomDialog/Models/TemplateStyle.cs" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/CustomDialog/ViewModels/SpecificViewModel.cs" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/CustomDialog/Views/Templates/DataGridTemplate.cs" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/CustomDialog/Views/Templates/WrapPanelTemplate.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/.idea.CustomDialog/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.CustomDialog/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CustomDialog/App.axaml" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/App.axaml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CustomDialog/ViewModels/BodyViewModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/ViewModels/BodyViewModel.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CustomDialog/ViewModels/Entities/DirectoryViewModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/ViewModels/Entities/DirectoryViewModel.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CustomDialog/ViewModels/Entities/FileEntityViewModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/ViewModels/Entities/FileEntityViewModel.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CustomDialog/ViewModels/Entities/FileViewModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/ViewModels/Entities/FileViewModel.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CustomDialog/ViewModels/GeneralViewModel.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/ViewModels/GeneralViewModel.cs" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CustomDialog/Views/BodyView.axaml" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/Views/BodyView.axaml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CustomDialog/Views/GeneralView.axaml" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/Views/GeneralView.axaml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/bin/Debug/net8.0/CustomDialog.dll" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/bin/Debug/net8.0/CustomDialog.dll" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/bin/Debug/net8.0/CustomDialog.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/bin/Debug/net8.0/CustomDialog.pdb" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/Resources.Inputs.cache" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/Resources.Inputs.cache" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.dll" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.dll" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.pdb" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.ref.dll" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/original.ref.dll" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/resources" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/Avalonia/resources" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfo.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfo.cs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfoInputs.cache" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfoInputs.cache" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.csproj.CoreCompileInputs.cache" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.csproj.CoreCompileInputs.cache" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.dll" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.dll" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.pdb" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.pdb" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.sourcelink.json" beforeDir="false" afterPath="$PROJECT_DIR$/CustomDialog/obj/Debug/net8.0/CustomDialog.sourcelink.json" afterDir="false" />
@@ -61,7 +76,8 @@
     ".NET Project.CustomDialog.executor": "Run",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "master",
+    "XThreadsFramesViewSplitterKey": "0.44957983",
+    "git-widget-placeholder": "dev-svm",
     "last_opened_file_path": "/home/dmitrichenkoda@kvant-open.spb.ru/RiderProjects/CustomDialog",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
@@ -274,4 +290,36 @@
     <MESSAGE value="Working header's radio buttons for body style change" />
     <option name="LAST_COMMIT_MESSAGE" value="Working header's radio buttons for body style change" />
   </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="DotNet Breakpoints">
+          <url>file://$PROJECT_DIR$/CustomDialog/ViewModels/BodyViewModel.cs</url>
+          <line>48</line>
+          <properties documentPath="$PROJECT_DIR$/CustomDialog/ViewModels/BodyViewModel.cs" initialLine="48" containingFunctionPresentation="Property 'CurrentTemplateStyle'">
+            <startOffsets>
+              <option value="1425" />
+            </startOffsets>
+            <endOffsets>
+              <option value="1426" />
+            </endOffsets>
+          </properties>
+          <option name="timeStamp" value="58" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="DotNet Breakpoints">
+          <url>file://$PROJECT_DIR$/CustomDialog/ViewModels/BodyViewModel.cs</url>
+          <line>57</line>
+          <properties documentPath="$PROJECT_DIR$/CustomDialog/ViewModels/BodyViewModel.cs" initialLine="57" containingFunctionPresentation="Property 'CurrentTemplateStyle'">
+            <startOffsets>
+              <option value="1896" />
+            </startOffsets>
+            <endOffsets>
+              <option value="1897" />
+            </endOffsets>
+          </properties>
+          <option name="timeStamp" value="59" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
 </project>
\ No newline at end of file
Index: CustomDialog/obj/Debug/net8.0/CustomDialog.sourcelink.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"documents\":{\"/home/dmitrichenkoda@kvant-open.spb.ru/RiderProjects/CustomDialog/*\":\"https://raw.githubusercontent.com/Dsquar-gys/CustomDialog/df852a57a319f96cf9e959d907fe17170a383fc0/*\"}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/obj/Debug/net8.0/CustomDialog.sourcelink.json b/CustomDialog/obj/Debug/net8.0/CustomDialog.sourcelink.json
--- a/CustomDialog/obj/Debug/net8.0/CustomDialog.sourcelink.json	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/CustomDialog/obj/Debug/net8.0/CustomDialog.sourcelink.json	(date 1707228620359)
@@ -1,1 +1,1 @@
-{"documents":{"/home/dmitrichenkoda@kvant-open.spb.ru/RiderProjects/CustomDialog/*":"https://raw.githubusercontent.com/Dsquar-gys/CustomDialog/df852a57a319f96cf9e959d907fe17170a383fc0/*"}}
\ No newline at end of file
+{"documents":{"/home/dmitrichenkoda@kvant-open.spb.ru/RiderProjects/CustomDialog/*":"https://raw.githubusercontent.com/Dsquar-gys/CustomDialog/59586a25d8fb39dfa7899cb1a8def0c118de49eb/*"}}
\ No newline at end of file
Index: CustomDialog/Views/GeneralView.axaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><UserControl xmlns=\"https://github.com/avaloniaui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             xmlns:vm=\"using:CustomDialog.ViewModels\"\n             xmlns:nodes=\"clr-namespace:CustomDialog.Models.Nodes\"\n             xmlns:tc=\"using:CustomDialog.Templated_Controls\"\n             xmlns:i=\"clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity\"\n             xmlns:iac=\"clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions\"\n             mc:Ignorable=\"d\"\n             d:DesignWidth=\"800\"\n             d:DesignHeight=\"450\"\n             x:DataType=\"vm:GeneralViewModel\"\n             x:Class=\"CustomDialog.Views.GeneralView\">\n    \n    <Design.DataContext>\n        <vm:GeneralViewModel/>\n    </Design.DataContext>\n    \n    <Grid RowDefinitions=\"Auto, *\">\n        <!-- Header -->\n        <Grid Grid.Row=\"0\"\n              Background=\"Gray\"\n              Height=\"50\"\n              ColumnDefinitions=\"Auto, Auto, *, Auto\">\n            <StackPanel Grid.Column=\"0\"\n                        Orientation=\"Horizontal\">\n                <tc:HeaderButton Classes=\"arrowLeft\" \n                                Margin=\"5,0,0,0\"\n                                Command=\"{Binding BodyVM.MoveBackCommand}\"/>\n                <tc:HeaderButton Classes=\"arrowRight\"\n                                 Margin=\"0,0,5,0\"\n                                 Command=\"{Binding BodyVM.MoveForwardCommand}\"/>\n            </StackPanel>\n            <ListBox Grid.Column=\"1\"\n                     Theme=\"{DynamicResource ButtonRadioGroupListBox}\"\n                     SelectionMode=\"Single\">\n                <ListBoxItem IsSelected=\"{Binding BodyVM.Plated}\">\n                    <Image Source=\"/Assets/Icons/plates.png\"/>\n                </ListBoxItem>\n                <Image Source=\"/Assets/Icons/list.png\"/>\n                <ListBox.Styles>\n                    <Style Selector=\"ListBoxItem\">\n                        <Setter Property=\"Margin\" Value=\"3\"/>\n                        <Setter Property=\"Padding\" Value=\"7\" />\n                    </Style>\n                </ListBox.Styles>\n            </ListBox>\n            <TextBox Grid.Column=\"2\"\n                     Name=\"PathFinder\"\n                     Text=\"{Binding BodyVM.FilePath}\"\n                     Margin=\"10,0\">\n                <i:Interaction.Behaviors>\n                    <iac:EventTriggerBehavior EventName=\"TextChanged\">\n                        <iac:InvokeCommandAction Command=\"{Binding BodyVM.OpenCommand}\" \n                                                 CommandParameter=\"{Binding $self}\"/>\n                    </iac:EventTriggerBehavior>\n                </i:Interaction.Behaviors>\n            </TextBox>\n            <StackPanel Grid.Column=\"3\"\n                        Orientation=\"Horizontal\"\n                        Margin=\"15\">\n                <Label Content=\"Split\"\n                       Margin=\"5, 0\"/>\n                <Label Content=\"Search\"\n                       Margin=\"5, 0\"/>\n                <Label Content=\"Menu\" \n                       Margin=\"5, 0\"/>\n            </StackPanel>\n        </Grid>\n        <!-- Body -->\n        <Grid Grid.Row=\"1\"\n              ColumnDefinitions=\"Auto, *\"\n              Background=\"DarkGray\">\n            <!-- Sidebar (Tree) -->\n            <ScrollViewer VerticalScrollBarVisibility=\"Auto\"\n                          HorizontalScrollBarVisibility=\"Auto\"\n                          Grid.Column=\"0\"\n                          MaxWidth=\"200\">\n                <TreeView ItemsSource=\"{Binding Nodes}\"\n                          SelectionMode=\"Single\"\n                          SelectedItem=\"{Binding SelectedNode}\"\n                          Margin=\"0,0,5,0\">\n                    \n                    <i:Interaction.Behaviors>\n                        <iac:EventTriggerBehavior EventName=\"Tapped\">\n                            <iac:InvokeCommandAction Command=\"{Binding BodyVM.ChangeSelectedCommand}\"\n                                                     CommandParameter=\"{Binding SelectedNode}\"/>\n                        </iac:EventTriggerBehavior>\n                    </i:Interaction.Behaviors>\n                    \n                    <TreeView.DataTemplates>\n                        \n                        <TreeDataTemplate DataType=\"nodes:Node\"\n                                          ItemsSource=\"{Binding SubNodes}\">\n                            <TextBlock Text=\"{Binding Title}\"/>\n                        </TreeDataTemplate>\n                        \n                        <TreeDataTemplate DataType=\"nodes:ClickableNode\">\n                            <Border Height=\"20\"\n                                    Margin=\"5\"\n                                    Background=\"Transparent\">\n                                <StackPanel Orientation=\"Horizontal\">\n                                    <Image Source=\"{Binding ., Converter={StaticResource ImagableConverter}}\"/>\n                                    <Label Content=\"{Binding Title}\"\n                                           Margin=\"10,0\"\n                                           VerticalAlignment=\"Center\"/>\n                                </StackPanel>\n                            </Border>\n                        </TreeDataTemplate>\n                        \n                    </TreeView.DataTemplates>\n                    <TreeView.Styles>\n                        <Style Selector=\"TreeViewItem\">\n                            <Setter Property=\"IsExpanded\" Value=\"True\" />\n                        </Style>\n                    </TreeView.Styles>\n                </TreeView>\n            </ScrollViewer>\n            <!-- Main area -->\n            <Border Grid.Column=\"1\"\n                    Background=\"LightGray\">\n                <TransitioningContentControl Content=\"{Binding BodyVM}\"/>\n            </Border>\n        </Grid>\n    </Grid>\n    \n</UserControl>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/Views/GeneralView.axaml b/CustomDialog/Views/GeneralView.axaml
--- a/CustomDialog/Views/GeneralView.axaml	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/CustomDialog/Views/GeneralView.axaml	(date 1707229837807)
@@ -34,15 +34,26 @@
             </StackPanel>
             <ListBox Grid.Column="1"
                      Theme="{DynamicResource ButtonRadioGroupListBox}"
-                     SelectionMode="Single">
-                <ListBoxItem IsSelected="{Binding BodyVM.Plated}">
-                    <Image Source="/Assets/Icons/plates.png"/>
-                </ListBoxItem>
-                <Image Source="/Assets/Icons/list.png"/>
+                     SelectionMode="Single"
+                     ItemsSource="{Binding TemplateStyles}"
+                     SelectedItem="{Binding BodyVM.CurrentTemplateStyle}">
+                
+                <ListBox.ItemTemplate>
+                    <DataTemplate>
+                        <Image />
+                    </DataTemplate>
+                </ListBox.ItemTemplate>
+                
                 <ListBox.Styles>
                     <Style Selector="ListBoxItem">
-                        <Setter Property="Margin" Value="3"/>
+                        <Setter Property="Margin" Value="1, 3"/>
                         <Setter Property="Padding" Value="7" />
+                    </Style>
+                    <Style Selector="ListBoxItem[Content=WrapPanel] Image">
+                        <Setter Property="Source" Value="/Assets/Icons/plates.png" />
+                    </Style>
+                    <Style Selector="ListBoxItem[Content=DataGrid] Image">
+                        <Setter Property="Source" Value="/Assets/Icons/grid.png" />
                     </Style>
                 </ListBox.Styles>
             </ListBox>
Index: CustomDialog/ViewModels/GeneralViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\nusing System.Collections.ObjectModel;\nusing System.IO;\nusing CustomDialog.Models.Nodes;\nusing ReactiveUI;\n\nnamespace CustomDialog.ViewModels;\n\npublic class GeneralViewModel : ViewModelBase\n{\n    #region Private Fields\n    \n    private ClickableNode _selectedNode;\n    \n    #endregion\n    \n    #region Properties\n    \n    public BodyViewModel BodyVM { get; } = new();\n    public ObservableCollection<Node> Nodes{ get; }\n\n    public ClickableNode SelectedNode\n    {\n        get => _selectedNode;\n        set => this.RaiseAndSetIfChanged(ref _selectedNode, value);\n    }\n    \n    #endregion\n\n    public GeneralViewModel()\n    {\n        // Nodes initialization\n        Nodes = new ObservableCollection<Node>\n        {\n            new Node(\"Places\", [\n                new ClickableNode(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile), \"Home\"),\n                new ClickableNode(Environment.GetFolderPath(Environment.SpecialFolder.Desktop), \"Desktop\"),\n                new ClickableNode(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.UserProfile), \"Downloads\"),\"Download\"),\n                new ClickableNode(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), \"Documents\"),\n                new ClickableNode(Environment.GetFolderPath(Environment.SpecialFolder.MyPictures), \"Pictures\")\n            ])\n        };\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/ViewModels/GeneralViewModel.cs b/CustomDialog/ViewModels/GeneralViewModel.cs
--- a/CustomDialog/ViewModels/GeneralViewModel.cs	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/CustomDialog/ViewModels/GeneralViewModel.cs	(date 1707230050001)
@@ -1,6 +1,7 @@
 using System;
 using System.Collections.ObjectModel;
 using System.IO;
+using CustomDialog.Models;
 using CustomDialog.Models.Nodes;
 using ReactiveUI;
 
@@ -18,6 +19,11 @@
     
     public BodyViewModel BodyVM { get; } = new();
     public ObservableCollection<Node> Nodes{ get; }
+    public ObservableCollection<TemplateStyle> TemplateStyles =>
+    [
+        TemplateStyle.WrapPanel,
+        TemplateStyle.DataGrid
+    ];
 
     public ClickableNode SelectedNode
     {
Index: CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfo.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\nusing System;\nusing System.Reflection;\n\n[assembly: System.Reflection.AssemblyCompanyAttribute(\"CustomDialog\")]\n[assembly: System.Reflection.AssemblyConfigurationAttribute(\"Debug\")]\n[assembly: System.Reflection.AssemblyFileVersionAttribute(\"1.0.0.0\")]\n[assembly: System.Reflection.AssemblyInformationalVersionAttribute(\"1.0.0+df852a57a319f96cf9e959d907fe17170a383fc0\")]\n[assembly: System.Reflection.AssemblyProductAttribute(\"CustomDialog\")]\n[assembly: System.Reflection.AssemblyTitleAttribute(\"CustomDialog\")]\n[assembly: System.Reflection.AssemblyVersionAttribute(\"1.0.0.0\")]\n\n// Generated by the MSBuild WriteCodeFragment class.\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfo.cs b/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfo.cs
--- a/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfo.cs	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/CustomDialog/obj/Debug/net8.0/CustomDialog.AssemblyInfo.cs	(date 1707228620315)
@@ -13,7 +13,7 @@
 [assembly: System.Reflection.AssemblyCompanyAttribute("CustomDialog")]
 [assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
 [assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
-[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+df852a57a319f96cf9e959d907fe17170a383fc0")]
+[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+59586a25d8fb39dfa7899cb1a8def0c118de49eb")]
 [assembly: System.Reflection.AssemblyProductAttribute("CustomDialog")]
 [assembly: System.Reflection.AssemblyTitleAttribute("CustomDialog")]
 [assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
Index: CustomDialog/ViewModels/Entities/DirectoryViewModel.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.IO;\nusing CustomDialog.Models;\n\nnamespace CustomDialog.ViewModels.Entities;\n\npublic sealed class DirectoryViewModel : FileEntityViewModel, ILoadable\n{\n    public DirectoryViewModel(string dirPath, string dirName) : base(dirPath, dirName, \"folder\") {}\n\n    public DirectoryViewModel(DirectoryInfo directory) : base(directory.FullName, directory.Name, \"folder\") {}\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/CustomDialog/ViewModels/Entities/DirectoryViewModel.cs b/CustomDialog/ViewModels/Entities/DirectoryViewModel.cs
--- a/CustomDialog/ViewModels/Entities/DirectoryViewModel.cs	(revision 59586a25d8fb39dfa7899cb1a8def0c118de49eb)
+++ b/CustomDialog/ViewModels/Entities/DirectoryViewModel.cs	(date 1707229234369)
@@ -5,7 +5,7 @@
 
 public sealed class DirectoryViewModel : FileEntityViewModel, ILoadable
 {
-    public DirectoryViewModel(string dirPath, string dirName) : base(dirPath, dirName, "folder") {}
+    public DirectoryViewModel(SpecificViewModel svm, string dirPath, string dirName) : base(svm, dirPath, dirName, "folder") {}
 
-    public DirectoryViewModel(DirectoryInfo directory) : base(directory.FullName, directory.Name, "folder") {}
+    public DirectoryViewModel(SpecificViewModel svm, DirectoryInfo directory) : base(svm, directory.FullName, directory.Name, "folder") {}
 }
\ No newline at end of file
